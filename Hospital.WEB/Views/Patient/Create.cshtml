@model Hospital.WEB.Models.ViewModels.PatientViewModels.PatientViewModel

@{
	ViewBag.Title = "Create Patient";
}

<h2>Create Patient</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Patient</h4>
		<hr />
		@Html.ValidationSummary(false, "", new { @class = "text-danger" })

		<div class="form-group">
			@Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Birthday, new { @class = "date control-label col-md-2" })
			<div class="col-md-10">
				<input class="form-control single-line" id="Birthday" name="Birthday" type="date"
					   value=@Model.Birthday.ToString("yyyy-MM-dd")
					   min=@Model.MinDate.ToString("yyyy-MM-dd")
					   max=@Model.MaxDate.ToString("yyyy-MM-dd")>
				@Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Gender, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control phone" } })
				@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.EmployeeId, "Doctor", new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.EmployeeId, Model.StaffDTO, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}


